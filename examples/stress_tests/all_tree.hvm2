data Bool = True | False
data Tree = (Node lft rgt) | (Leaf val)

and = λa (a λb(b) λb(False))

gen = λn match n {
  0   : (Leaf True)
  1+p : (Node (gen p) (gen p))
}

all = λt
  let case_node = λa λb (and (all a) (all b))
  let case_leaf = λv v
  (t case_node case_leaf)

main = (all (gen 24))
